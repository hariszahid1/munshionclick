<style>
input[type=checkbox] {
cursor: pointer;
height: 15px;
width: 15px;
}
.u-perm-scroll {
text-align: center;
font-family: Arial;
height: 500px;
overflow: auto;
}
</style>

<% if user.persisted?
  submit_url = user_path
  submit_url = submit_url
  submit_method = :patch
 else
  submit_url = create_user_users_path
  submit_method = :post
 end
%>

<%= bootstrap_form_for(user, url: submit_url, method: submit_method) do |f| %>
  <% if user.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(user.errors.count, "error") %> prohibited this user from being saved:</h2>

      <ul>
      <% user.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

	<ul class="nav nav-pills mt-4" role="tablist">
    <li class="nav-item">
      <a class="nav-link tab-label active " data-toggle="tab" href="#type_1" role="tab">Profile</a>
    </li>
		<% if @user.user_permissions.present? && current_user.super_admin? %>
			<li class="nav-item">
    	  <a class="nav-link tab-label " data-toggle="tab" href="#type_2" role="tab">User Permissions</a>
    	</li>
		<% end %>
	</ul>

	<div class="tab-content">
		<div class="tab-pane active mb-3 card shadow mt-2 p-4 border-radius-1" id="type_1" role="tabpanel">
			<div class="row">
				<div class="col">
  		    <%= f.label :name do %>
  		        <%= User.human_attribute_name :name %>
  		        <i class="fas fa-language"></i>
  		      <% end %>
  		    <%= f.text_field :name,required:true,placeholder: "Enter the Name", hide_label: true, class: 'urdu-font'%>
  		    <%= f.text_field :user_name, placeholder:"Enter Username", required: true %>
  		    <%= f.label :father_name do %>
  		        <%= User.human_attribute_name :father_name %>
  		        <i class="fas fa-language"></i>
  		      <% end %>
  		    <%= f.text_field :father_name, placeholder: "Enter the Father Name", hide_label: true, class: 'urdu-font' %>
  		    <%= f.text_field :city, placeholder:"Enter City" %>
  		    <%= f.text_field :phone %>
  		    <%= f.label :address do %>
  		        <%= User.human_attribute_name :address %>
  		        <i class="fas fa-language"></i>
  		      <% end %>
  		    <%= f.text_area :address, placeholder: "Enter the Address", hide_label: true, class: 'urdu-font' %>
				</div>
				<div class="col">
  		  	<%= f.text_field :email, placeholder:"Enter Email", required: true , disabled: true%>
  		  	<%= f.text_field :email_to %>
  		  	<%= f.text_field :email_cc %>
					<%= f.check_box :permission_updated, checked: false, hide_label: true, class:"form-checkbox can-create-checkbox position-relative" %>
  		  	<%= f.text_field :email_bcc %>
  		  	<%= f.text_field :fax %>
					<% if current_user.super_admin? and current_user.id!= f.object.id%>
  				  <div class="row">
  				    <div class="col-lg-12 form-group float-left">
  				      <%= f.select :roles_mask, User.user_roles.map { |key, value| [key.humanize, value] },{class: "form-control", required: true} %>
  				    </div>
  				  </div>
  				<%end%>
  		  	<% if f.object.persisted? %>
  		  	  <%= f.password_field :password%>
  		  	<% else %>
  		  	  <%= f.password_field :password, required: true %>
  		  	<% end %>
				</div>
			</div>
		</div>
		<div class="tab-pane mb-3 card shadow mt-2 p-3 border-radius-1" id="type_2" role="tabpanel">
			<%= f.hidden_field :created_by_id %>
			<div class="u-perm-scroll p-1">
			<% if @user.user_permissions.present? && current_user.super_admin? %>
			
				<table>
					<thead>
					<tr>
						<th class="h5 p-1 ">Accessed</th>
						<th class="h5 p-1 ">Module</th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-create'><span class="ml-1">Create</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-read'><span class="ml-1">Read</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-update'><span class="ml-1">Edit</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-delete'><span class="ml-1">Delete</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-can-download-pdf'><span class="ml-1">PDF</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-can-download-csv'><span class="ml-1">CSV</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-can-send-email'><span class="ml-1">Email</span></th>
						<th class="h5 p-1 "><input type="checkbox" id='select-all-checkbox-of-can-import-export'><span class="ml-1">Import/Export</span></th>
						<th class='hidden_column_head h5 p-1'><input type="checkbox" id='select-all-checkbox-of-hidden'><span class="ml-1">Hidden</span></th>
					</tr>
					</thead>
					<tbody>
							<%= f.fields_for :user_permissions do |perm| %>
								<%= render 'user_permission_fields', f: perm %>
							<%end%>
					</tbody>
				</table>			
			<% end %>
		</div>	
		</div>

	</div>
  <div class="card border-radius-1 shadow p-3">
    <label for="user_roles_mask" class="h5"><%= current_user.allowed_valid_roles.to_s.titleize %> Abilities</label>
    <% divclose = 0
    user_ability = f.object.user_ability if f.object.persisted? %>
    <% UserAbility.valid_roles.each_with_index do |rol, ind| %>
      <% if ind == 0 || ind%6 == 0 %>
        <% divclose = 6 %>
        <div class=" col-lg-12 col-sm-12 row">
      <% end %>
      
      <div class="form-check">
        <label style="cursor: pointer" class="form-check-label" for="user_ability_mask_<%= rol.to_s %>"><input style="cursor: pointer" class="form-check-input" type="checkbox" value="<%= rol.to_s %>" name="user[user_ability_roles][]" id="user_ability_mask_<%= rol.to_s %>" <%= user_ability.present? ? user_ability.abilityChecked?(rol) : "" %>><%= rol.to_s.humanize %></label>
      </div>
      
      <% if (divclose -=1) == 0 %>
        </div>
      <% end %>
    <% end %>
  </div>
	<div class="clearfix"></div>
  <div class="modal-footer">
    <%= f.submit @btn_value ,class: "btn btn-primary float-right" %>
  </div>
<% end %>


<script>
	$(document).ready(function () {
	//for hidding isHidden column
	const queryString = window.location.search;
	const urlParams = new URLSearchParams(queryString);
	const hidden = urlParams.get('hidden')

if(!(hidden=='true')){
	$('.hidden_column_td').css('display','none');
	$('.hidden_column_head').css('display','none');
}


		// for create
	$('#select-all-checkbox-of-create').on('click', function () {
		if (this.checked) {
			$('.can-create-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-create-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-create-checkbox').on('click', function () {
		if ($('.can-create-checkbox:checked').length == $('.can-create-checkbox').length) {
			$('#select-all-checkbox-of-create').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-create').prop('checked', false);
		}
	});

	// for read
	$('#select-all-checkbox-of-read').on('click', function () {
		if (this.checked) {
			$('.can-read-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-read-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-read-checkbox').on('click', function () {
		if ($('.can-read-checkbox:checked').length == $('.can-read-checkbox').length) {
			$('#select-all-checkbox-of-read').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-read').prop('checked', false);
		}
	});

	// for update
	$('#select-all-checkbox-of-update').on('click', function () {
		if (this.checked) {
			$('.can-update-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-update-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-update-checkbox').on('click', function () {
		if ($('.can-update-checkbox:checked').length == $('.can-update-checkbox').length) {
			$('#select-all-checkbox-of-update').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-update').prop('checked', false);
		}
	});

	// for delete
	$('#select-all-checkbox-of-delete').on('click', function () {
		if (this.checked) {
			$('.can-delete-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-delete-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-delete-checkbox').on('click', function () {
		if ($('.can-delete-checkbox:checked').length == $('.can-delete-checkbox').length) {
			$('#select-all-checkbox-of-delete').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-delete').prop('checked', false);
		}
	});

	// for hidden
	$('#select-all-checkbox-of-hidden').on('click', function () {
		if (this.checked) {
			$('.is-hidden-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.is-hidden-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.is-hidden-checkbox').on('click', function () {
		if ($('.is-hidden-checkbox:checked').length == $('.is-hidden-checkbox').length) {
			$('#select-all-checkbox-of-hidden').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-hidden').prop('checked', false);
		}
	});

	// for pdf
	$('#select-all-checkbox-of-can-download-pdf').on('click', function () {
		if (this.checked) {
			$('.can-download-pdf-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-download-pdf-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-download-pdf-checkbox').on('click', function () {
		if ($('.can-download-pdf-checkbox:checked').length == $('.can-download-pdf-checkbox').length) {
			$('#select-all-checkbox-of-can-download-pdf').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-can-download-pdf').prop('checked', false);
		}
	});

	// for csv
	$('#select-all-checkbox-of-can-download-csv').on('click', function () {
		if (this.checked) {
			$('.can-download-csv-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-download-csv-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-download-csv-checkbox').on('click', function () {
		if ($('.can-download-csv-checkbox:checked').length == $('.can-download-csv-checkbox').length) {
			$('#select-all-checkbox-of-can-download-csv').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-can-download-csv').prop('checked', false);
		}
	});

	// for eamil
	$('#select-all-checkbox-of-can-send-email').on('click', function () {
		if (this.checked) {
			$('.can-send-email-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-send-email-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-send-email-checkbox').on('click', function () {
		if ($('.can-send-email-checkbox:checked').length == $('.can-send-email-checkbox').length) {
			$('#select-all-checkbox-of-can-send-email').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-can-send-email').prop('checked', false);
		}
	});

	// for import export
	$('#select-all-checkbox-of-can-import-export').on('click', function () {
		if (this.checked) {
			$('.can-import-export-checkbox').each(function () {
				this.checked = true;
			});
		} else {
			$('.can-import-export-checkbox').each(function () {
				this.checked = false;
			});
		}
	});

	$('.can-import-export-checkbox').on('click', function () {
		if ($('.can-import-export-checkbox:checked').length == $('.can-import-export-checkbox').length) {
			$('#select-all-checkbox-of-can-import-export').prop('checked', true);
		} else {
			$('#select-all-checkbox-of-can-import-export').prop('checked', false);
		}
	});

	// for disabling entire tr
	$('.can-access-checkbox').on('click', function () {
		debugger;
		$(this).closest('tr').find('input').prop('disabled', !$(this).is(':checked'))
		$(this).closest('td').find('input').removeAttr('disabled')
	})
		var checkboxes = $('.can-access-checkbox')
		for(var i = 0; i < checkboxes.length; i++ ){
			$(checkboxes[i]).closest('tr').find('input').prop('disabled', !$(checkboxes[i]).is(':checked'))
			$(checkboxes[i]).closest('td').find('input').removeAttr('disabled')
		}
	})
</script>


